import { t } from '../../helpers/t';

// FIXME: should remove `text` node generated by `components` later
// FIXME: how to handle more depth of `text` ?
// FIXME: refactor these lines for better readable
export const FlattenText = () => t`
    <text wx:elif="{{type === 'text'}}" data-goji-id="{{id || -1}}" id="{{props.id}}" class="{{props.className}}" style="{{props.style || ''}}" selectable="{{props.selectable}}" space="{{props.space}}" decode="{{props.decode}}" bindtouchstart="e" bindtouchmove="e" bindtouchcancel="e" bindtouchend="e" bindtap="e" bindlongpress="e" bindlongtap="e" bindtransitionend="e" bindanimationstart="e" bindanimationiteration="e" bindanimationend="e" bindtouchforcechange="e">
      <block wx:for="{{c}}" wx:key="id">
        <block wx:if="{{item.type === 'GOJI_TYPE_TEXT'}}">{{item.text}}</block>
        <text wx:elif="item.type === 'text'" data-goji-id="{{item.id || -1}}" id="{{props.id}}" class="{{item.props.className}}" style="{{item.props.style || ''}}" selectable="{{item.props.selectable}}" space="{{item.props.space}}" decode="{{item.props.decode}}" bindtouchstart="e" bindtouchmove="e" bindtouchcancel="e" bindtouchend="e" bindtap="e" bindlongpress="e" bindlongtap="e" bindtransitionend="e" bindanimationstart="e" bindanimationiteration="e" bindanimationend="e" bindtouchforcechange="e">
          <block wx:for="{{item.c}}" wx:key="id">
            <block wx:if="{{item.type === 'GOJI_TYPE_TEXT'}}">{{item.text}}</block>
            <text wx:elif="item.type === 'text'" data-goji-id="{{item.id || -1}}" id="{{props.id}}" class="{{item.props.className}}" style="{{item.props.style || ''}}" selectable="{{item.props.selectable}}" space="{{item.props.space}}" decode="{{item.props.decode}}" bindtouchstart="e" bindtouchmove="e" bindtouchcancel="e" bindtouchend="e" bindtap="e" bindlongpress="e" bindlongtap="e" bindtransitionend="e" bindanimationstart="e" bindanimationiteration="e" bindanimationend="e" bindtouchforcechange="e">
              <block wx:for="{{item.c}}" wx:key="id">
                <block wx:if="{{item.type === 'GOJI_TYPE_TEXT'}}">{{item.text}}</block>
                <text wx:elif="item.type === 'text'" data-goji-id="{{item.id || -1}}" id="{{props.id}}" class="{{item.props.className}}" style="{{item.props.style || ''}}" selectable="{{item.props.selectable}}" space="{{item.props.space}}" decode="{{item.props.decode}}" bindtouchstart="e" bindtouchmove="e" bindtouchcancel="e" bindtouchend="e" bindtap="e" bindlongpress="e" bindlongtap="e" bindtransitionend="e" bindanimationstart="e" bindanimationiteration="e" bindanimationend="e" bindtouchforcechange="e">
                  <block wx:for="{{item.c}}" wx:key="id">
                    <block wx:if="{{item.type === 'GOJI_TYPE_TEXT'}}">{{item.text}}</block>
                    <text wx:elif="item.type === 'text'" data-goji-id="{{item.id || -1}}" id="{{props.id}}" class="{{item.props.className}}" style="{{item.props.style || ''}}" selectable="{{item.props.selectable}}" space="{{item.props.space}}" decode="{{item.props.decode}}" bindtouchstart="e" bindtouchmove="e" bindtouchcancel="e" bindtouchend="e" bindtap="e" bindlongpress="e" bindlongtap="e" bindtransitionend="e" bindanimationstart="e" bindanimationiteration="e" bindanimationend="e" bindtouchforcechange="e">
                      <block wx:for="{{item.c}}" wx:key="id">
                        <block wx:if="{{item.type === 'GOJI_TYPE_TEXT'}}">{{item.text}}</block>
                        <text wx:elif="item.type === 'text'" data-goji-id="{{item.id || -1}}" id="{{props.id}}" class="{{item.props.className}}" style="{{item.props.style || ''}}" selectable="{{item.props.selectable}}" space="{{item.props.space}}" decode="{{item.props.decode}}" bindtouchstart="e" bindtouchmove="e" bindtouchcancel="e" bindtouchend="e" bindtap="e" bindlongpress="e" bindlongtap="e" bindtransitionend="e" bindanimationstart="e" bindanimationiteration="e" bindanimationend="e" bindtouchforcechange="e">
                          <block wx:for="{{item.c}}" wx:key="id">
                            <block wx:if="{{item.type === 'GOJI_TYPE_TEXT'}}">{{item.text}}</block>
                            <text wx:elif="item.type === 'text'" data-goji-id="{{item.id || -1}}" id="{{props.id}}" class="{{item.props.className}}" style="{{item.props.style || ''}}" selectable="{{item.props.selectable}}" space="{{item.props.space}}" decode="{{item.props.decode}}" bindtouchstart="e" bindtouchmove="e" bindtouchcancel="e" bindtouchend="e" bindtap="e" bindlongpress="e" bindlongtap="e" bindtransitionend="e" bindanimationstart="e" bindanimationiteration="e" bindanimationend="e" bindtouchforcechange="e"></text>
                          </block>
                        </text>
                      </block>
                    </text>
                  </block>
                </text>
              </block>
            </text>
          </block>
        </text>
      </block>
    </text>
  `;

// FIXME: should remove \`swiper\` and \`swiper-item\` node generated by \`components\` later
export const FlattenSwiper = () => t`
    <block wx:elif="{{type === 'swiper'}}">
      <swiper
        data-goji-id="{{id || -1}}"
        id="{{props.id}}"
        class="{{props.className}}"
        style="{{props.style || ''}}"
        indicator-dots="{{props.indicatorDots}}"
        indicator-color="{{props.indicatorColor || 'rgba(0,0,0,.3)'}}"
        indicator-active-color="{{props.indicatorActiveColor || '#000000'}}"
        autoplay="{{props.autoplay}}"
        current="{{props.current}}"
        interval="{{props.interval === undefined ? 5000 : props.interval }}"
        duration="{{props.duration === undefined ? 500 : props.duration }}"
        circular="{{props.circular}}"
        vertical="{{props.vertical}}"
        previous-margin="{{props.previousMargin || '0px'}}"
        next-margin="{{props.nextMargin || '0px'}}"
        display-multiple-items="{{props.displayMultipleItems === undefined ? 1 : props.displayMultipleItems }}"
        skip-hidden-item-layout="{{props.skipHiddenItemLayout}}"
        easing-function="{{props.easingFunction || 'default'}}"
        onChange="e"
        onTransition="e"
        onAnimationfinish="e"
        onTouchstart="e"
        onTouchmove="e"
        onTouchcancel="e"
        onTouchend="e"
        onTap="e"
        onLongpress="e"
        onLongtap="e"
        onTransitionend="e"
        onAnimationstart="e"
        onAnimationiteration="e"
        onAnimationend="e"
        onTouchforcechange="e"
      >
        <block wx:for="{{c}}" wx:key="id">
          <swiper-item>
            <block wx:for="{{item.c}}" wx:key="id">
              <template is="$$GOJI_COMPONENT0" data="{{ ...item }}" />
            </block>
          </swiper-item>
        </block>
      </swiper>
    </block>
  `;

export const FlattenMovableArea = () => t`
  <block wx:elif="{{type === 'movable-area'}}">
    <movable-area
      data-goji-id="{{id || -1}}"
      class="{{props.className}}"
      id="{{props.id}}"
      style="{{props.style || ''}}"
      scale-area="{{props.scaleArea}}"
      bindtouchstart="e"
      bindtouchmove="e"
      bindtouchcancel="e"
      bindtouchend="e"
      bindtap="e"
      bindlongpress="e"
      bindtransitionend="e"
      bindanimationstart="e"
      bindanimationiteration="e"
      bindanimationend="e"
      bindtouchforcechange="e"
    >
      <block wx:for="{{c}}" wx:key="id">
        <movable-view
          data-goji-id="{{item.id || -1}}"
          class="{{item.props.className}}"
          id="{{item.props.id}}"
          style="{{item.props.style || ''}}"
          direction="{{item.props.direction || 'none'}}"
          inertia="{{item.props.inertia}}"
          out-of-bounds="{{item.props.outOfBounds}}"
          x="{{item.props.x}}"
          y="{{item.props.y}}"
          damping="{{item.props.damping === undefined ? 20 : item.props.damping }}"
          friction="{{item.props.friction === undefined ? 2 : item.props.friction }}"
          disabled="{{item.props.disabled}}"
          scale="{{item.props.scale}}"
          scale-min="{{item.props.scaleMin === undefined ? 0.5 : item.props.scaleMin }}"
          scale-max="{{item.props.scaleMax === undefined ? 10 : item.props.scaleMax }}"
          scale-value="{{item.props.scaleValue === undefined ? 1 : item.props.scaleValue }}"
          animation="{{item.props.animation === undefined ? true : item.props.animation }}"
          bindchange="e"
          bindscale="e"
          bindhtouchmove="e"
          bindvtouchmove="e"
          bindtouchstart="e"
          bindtouchmove="e"
          bindtouchcancel="e"
          bindtouchend="e"
          bindtap="e"
          bindlongpress="e"
          bindtransitionend="e"
          bindanimationstart="e"
          bindanimationiteration="e"
          bindanimationend="e"
          bindtouchforcechange="e"
        >
          <block wx:for="{{item.c}}" wx:key="id">
            <template is="$$GOJI_COMPONENT0" data="{{ ...item }}" />
          </block>
        </movable-view>
      </block>
    </movable-area>
  </block>
`;
